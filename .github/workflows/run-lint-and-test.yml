name: Run Test and Lint on Pull Request

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Python Test and Lint Check
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.11 ]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres:15.6-alpine3.19
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Export Package To Requirements.txt
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry-plugin-export
          poetry export -f requirements.txt -o requirements.txt --without-hashes --with test
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --exclude=**/migrations/** --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --max-complexity=10 --ignore=E402,F841,F401,E302,E305 --exclude=**/settings/**,**/migrations/** --max-line-length=127 --statistics
      - name: Test with pytest
        env:
          NAME: test_db
          USER: postgres
          PASSWORD: postgres
          HOST: localhost
          PORT: 5432
        run: |
          cd webapp && pytest